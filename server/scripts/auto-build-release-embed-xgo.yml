name: auto build release
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build-go-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.16.0'
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build web
        run: |
          cd web
          sed -i 's/old-version/${{ steps.get_version.outputs.VERSION }}/g' ./src/layout/footer/index.vue
          npm install
          npm run build
          rm -rf ../server/web/web
          mv web ../server/web/
      - name: Build Go
        run: |
          cd server
          go env -w GO111MODULE=on
        
          curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest
          
          xgo --targets=linux/amd64,linux/arm64,linux/arm-7,windows-8.1/amd64,darwin-10.14/* -ldflags '-s -w' -out AirGo-${{ steps.get_version.outputs.VERSION }} .

      - name: Package
        run: |
          cd server
          # AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-amd64
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-amd64.zip AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-amd64 config.yaml LICENSE
          
          # AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-arm64
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-arm64.zip AirGo-${{ steps.get_version.outputs.VERSION }}-darwin-10.14-arm64 config.yaml LICENSE
          
          # AirGo-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-amd64.zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-amd64 config.yaml LICENSE
          
          
          # AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm64
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm64.zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm64 config.yaml LICENSE
          
          
          # AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm-7
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm-7.zip AirGo-${{ steps.get_version.outputs.VERSION }}-linux-arm-7 config.yaml LICENSE
          
          # AirGo-${{ steps.get_version.outputs.VERSION }}-windows-8.1-amd64.exe
          zip AirGo-${{ steps.get_version.outputs.VERSION }}-windows-8.1-amd64.zip AirGo-${{ steps.get_version.outputs.VERSION }}-windows-8.1-amd64.exe config.yaml LICENSE

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.Action_Token }}
          file: server/AirGo-${{ steps.get_version.outputs.VERSION }}*.zip
          tag: ${{ github.ref }}
          file_glob: true